{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/kozakiewicz/Desktop/aukcje-app/components/Timer.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Countdown from \"react-countdown\";\n\nvar Timer = function Timer(props) {\n  var renderer = function renderer(_ref) {\n    var days = _ref.days,\n        hours = _ref.hours,\n        minutes = _ref.minutes,\n        seconds = _ref.seconds,\n        completed = _ref.completed;\n\n    if (completed) {\n      // Render a completed state\n      return __jsx(Completionist, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 14\n        }\n      });\n    } else {\n      // Render a countdown\n      return __jsx(\"div\", {\n        className: \"flex no-wrap\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"flex flex-col\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }\n      }, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }, days), \" \", __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 33\n        }\n      }, \"days\")));\n    }\n  };\n\n  return __jsx(Countdown, {\n    date: props.date,\n    renderer: renderer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default Timer;","map":{"version":3,"sources":["/Users/kozakiewicz/Desktop/aukcje-app/components/Timer.js"],"names":["Countdown","Timer","props","renderer","days","hours","minutes","seconds","completed","date"],"mappings":";;;;;AAAA,OAAOA,SAAP,MAAsB,iBAAtB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAkD;AAAA,QAA/CC,IAA+C,QAA/CA,IAA+C;AAAA,QAAzCC,KAAyC,QAAzCA,KAAyC;AAAA,QAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,QAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,QAAhBC,SAAgB,QAAhBA,SAAgB;;AACjE,QAAIA,SAAJ,EAAe;AACb;AACA,aAAO,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAHD,MAGO;AACL;AACA,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOJ,IAAP,CADF,OACsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADtB,CADF,CADF;AAOD;AACF,GAdD;;AAgBA,SAAO,MAAC,SAAD;AAAW,IAAA,IAAI,EAAEF,KAAK,CAACO,IAAvB;AAA6B,IAAA,QAAQ,EAAEN,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAlBD;;AAoBA,eAAeF,KAAf","sourcesContent":["import Countdown from \"react-countdown\";\n\nconst Timer = (props) => {\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      // Render a completed state\n      return <Completionist />;\n    } else {\n      // Render a countdown\n      return (\n        <div className='flex no-wrap'>\n          <div className='flex flex-col'>\n            <span>{days}</span> <span>days</span>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return <Countdown date={props.date} renderer={renderer} />;\n};\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}