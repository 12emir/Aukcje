{"version":3,"file":"static/webpack/static/development/pages/aukcje/[id].js.3a148547a4620862767f.hot-update.js","sources":["webpack:///./components/Timer.js"],"sourcesContent":["import Countdown from \"react-countdown\";\n\nconst Timer = (props) => {\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      // Render a completed state\n      return <Completionist />;\n    } else {\n      return (\n        <div className='flex no-wrap'>\n          <div className='timer-wrapper  '>\n            <span className='timer-count'>{days}</span>\n            <span className='timer-span'>days</span>\n          </div>\n          <div className='timer-wrapper  '>\n            <span className='timer-count'>{hours}</span>\n            <span className='timer-span'>hours</span>\n          </div>\n          <div className='timer-wrapper  '>\n            <span className='timer-count'>{minutes}</span>\n            <span className='timer-span'> minutes</span>\n          </div>\n          <div className='timer-wrapper  '>\n            <span className='timer-count'>{seconds}</span>\n            <span className='timer-span'>seconds</span>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return <Countdown date={props.date} renderer={renderer} />;\n};\n\nexport default Timer;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}